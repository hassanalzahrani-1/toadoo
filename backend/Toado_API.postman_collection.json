{
	"info": {
		"_postman_id": "toado-api-collection",
		"name": "Toado API",
		"description": "Complete API collection for Toado - A FastAPI-based todo management backend with a playful toad theme üê∏",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Health",
			"item": [
				{
					"name": "Root",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								""
							]
						},
						"description": "Root endpoint with welcome message and API documentation links"
					},
					"response": []
				},
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/health",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"health"
							]
						},
						"description": "Health check endpoint to verify API is running"
					},
					"response": []
				}
			]
		},
		{
			"name": "Todos",
			"item": [
				{
					"name": "Create Todo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"todo_id\", jsonData.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Complete project documentation\",\n  \"description\": \"Write comprehensive README and API docs\",\n  \"status\": \"pending\",\n  \"priority\": \"high\",\n  \"due_date\": \"2025-10-15T12:00:00Z\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/todos",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos"
							]
						},
						"description": "Create a new todo with title, description, status, priority, and optional due date"
					},
					"response": []
				},
				{
					"name": "Create Todo - Minimal",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Quick task\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/todos",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos"
							]
						},
						"description": "Create a todo with only required fields (title). Status defaults to 'pending' and priority to 'medium'"
					},
					"response": []
				},
				{
					"name": "List All Todos",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/todos",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos"
							]
						},
						"description": "Retrieve all todos without filters"
					},
					"response": []
				},
				{
					"name": "List Todos - Filter by Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/todos?status=pending",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos"
							],
							"query": [
								{
									"key": "status",
									"value": "pending",
									"description": "Filter by status: pending, in_progress, or completed"
								}
							]
						},
						"description": "Filter todos by status (pending, in_progress, completed)"
					},
					"response": []
				},
				{
					"name": "List Todos - Filter by Priority",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/todos?priority=high",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos"
							],
							"query": [
								{
									"key": "priority",
									"value": "high",
									"description": "Filter by priority: low, medium, or high"
								}
							]
						},
						"description": "Filter todos by priority (low, medium, high)"
					},
					"response": []
				},
				{
					"name": "List Todos - Filter by Due Date",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/todos?due_before=2025-12-31T23:59:59Z",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos"
							],
							"query": [
								{
									"key": "due_before",
									"value": "2025-12-31T23:59:59Z",
									"description": "Filter todos due before this date"
								}
							]
						},
						"description": "Filter todos by due date (returns todos due before specified date)"
					},
					"response": []
				},
				{
					"name": "List Todos - Multiple Filters",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/todos?status=pending&priority=high&skip=0&limit=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos"
							],
							"query": [
								{
									"key": "status",
									"value": "pending"
								},
								{
									"key": "priority",
									"value": "high"
								},
								{
									"key": "skip",
									"value": "0",
									"description": "Number of records to skip (pagination)"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Maximum number of records to return"
								}
							]
						},
						"description": "Combine multiple filters with pagination"
					},
					"response": []
				},
				{
					"name": "Get Todo by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/todos/{{todo_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos",
								"{{todo_id}}"
							]
						},
						"description": "Retrieve a specific todo by its ID"
					},
					"response": []
				},
				{
					"name": "Update Todo",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Updated task title\",\n  \"description\": \"Updated description\",\n  \"status\": \"in_progress\",\n  \"priority\": \"medium\",\n  \"due_date\": \"2025-10-20T15:00:00Z\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/todos/{{todo_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos",
								"{{todo_id}}"
							]
						},
						"description": "Update an existing todo. All fields are optional - only provided fields will be updated"
					},
					"response": []
				},
				{
					"name": "Update Todo - Partial",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"completed\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/todos/{{todo_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos",
								"{{todo_id}}"
							]
						},
						"description": "Partial update - only update specific fields (e.g., mark as completed)"
					},
					"response": []
				},
				{
					"name": "Delete Todo",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/todos/{{todo_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos",
								"{{todo_id}}"
							]
						},
						"description": "Delete a todo by its ID"
					},
					"response": []
				}
			]
		},
		{
			"name": "Examples - Different Priorities",
			"item": [
				{
					"name": "Create Low Priority Todo",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Review code comments\",\n  \"description\": \"Go through and update code comments\",\n  \"priority\": \"low\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/todos",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Medium Priority Todo",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Update dependencies\",\n  \"description\": \"Check and update project dependencies\",\n  \"priority\": \"medium\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/todos",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create High Priority Todo",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Fix critical bug\",\n  \"description\": \"Address security vulnerability in authentication\",\n  \"priority\": \"high\",\n  \"status\": \"in_progress\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/todos",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Error Cases",
			"item": [
				{
					"name": "Create Todo - Invalid (Empty Title)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/todos",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos"
							]
						},
						"description": "Test validation error - empty title should fail"
					},
					"response": []
				},
				{
					"name": "Create Todo - Invalid (Past Due Date)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Past due task\",\n  \"due_date\": \"2020-01-01T00:00:00Z\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/todos",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos"
							]
						},
						"description": "Test validation error - past due date should fail"
					},
					"response": []
				},
				{
					"name": "Get Todo - Not Found",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/todos/99999",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos",
								"99999"
							]
						},
						"description": "Test 404 error for non-existent todo"
					},
					"response": []
				},
				{
					"name": "Update Todo - Not Found",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Updated\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/todos/99999",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos",
								"99999"
							]
						},
						"description": "Test 404 error when updating non-existent todo"
					},
					"response": []
				},
				{
					"name": "Delete Todo - Not Found",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/todos/99999",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos",
								"99999"
							]
						},
						"description": "Test 404 error when deleting non-existent todo"
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000",
			"type": "string"
		},
		{
			"key": "todo_id",
			"value": "1",
			"type": "string"
		}
	]
}
